//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(JobSearch.Data.JobSearchDBEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsba186eb212ffaf8ed8b4b3cf9f1513b9f65ad0642e7ddb4a1b7694716588ac02))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySetsba186eb212ffaf8ed8b4b3cf9f1513b9f65ad0642e7ddb4a1b7694716588ac02 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "ba186eb212ffaf8ed8b4b3cf9f1513b9f65ad0642e7ddb4a1b7694716588ac02"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "JobSearchDBModelStoreContainer.Companies")
            {
                return GetView0();
            }

            if (extentName == "JobSearchDBModelStoreContainer.Employee_Details")
            {
                return GetView1();
            }

            if (extentName == "JobSearchDBModelStoreContainer.Employee_Login")
            {
                return GetView2();
            }

            if (extentName == "JobSearchDBModelStoreContainer.Job_Reviews")
            {
                return GetView3();
            }

            if (extentName == "JobSearchDBModelStoreContainer.Job_Type")
            {
                return GetView4();
            }

            if (extentName == "JobSearchDBModelStoreContainer.Jobs")
            {
                return GetView5();
            }

            if (extentName == "JobSearchDBModelStoreContainer.Jobs_Applied")
            {
                return GetView6();
            }

            if (extentName == "JobSearchDBModelStoreContainer.Jobs_Hired")
            {
                return GetView7();
            }

            if (extentName == "JobSearchDBModelStoreContainer.Employee_Roles")
            {
                return GetView8();
            }

            if (extentName == "JobSearchDBModelStoreContainer.Employee_Searches")
            {
                return GetView9();
            }

            if (extentName == "JobSearchDBEntities.Companies")
            {
                return GetView10();
            }

            if (extentName == "JobSearchDBEntities.Employee_Details")
            {
                return GetView11();
            }

            if (extentName == "JobSearchDBEntities.Employee_Login")
            {
                return GetView12();
            }

            if (extentName == "JobSearchDBEntities.Job_Reviews")
            {
                return GetView13();
            }

            if (extentName == "JobSearchDBEntities.Job_Type")
            {
                return GetView14();
            }

            if (extentName == "JobSearchDBEntities.Jobs")
            {
                return GetView15();
            }

            if (extentName == "JobSearchDBEntities.Jobs_Applied")
            {
                return GetView16();
            }

            if (extentName == "JobSearchDBEntities.Jobs_Hired")
            {
                return GetView17();
            }

            if (extentName == "JobSearchDBEntities.Employee_Roles")
            {
                return GetView18();
            }

            if (extentName == "JobSearchDBEntities.Employee_Searches")
            {
                return GetView19();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for JobSearchDBModelStoreContainer.Companies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Companies
        [JobSearchDBModel.Store.Companies](T1.Companies_Id, T1.Companies_Name, T1.Companies_Description)
    FROM (
        SELECT 
            T.Id AS Companies_Id, 
            T.Name AS Companies_Name, 
            T.Description AS Companies_Description, 
            True AS _from0
        FROM JobSearchDBEntities.Companies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBModelStoreContainer.Employee_Details.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employee_Details
        [JobSearchDBModel.Store.Employee_Details](T1.[Employee_Details.Id], T1.[Employee_Details.LoginId], T1.[Employee_Details.Firstname], T1.[Employee_Details.Lastname], T1.[Employee_Details.Email], T1.[Employee_Details.Address], T1.[Employee_Details.JobTitleId], T1.[Employee_Details.SignUpDate])
    FROM (
        SELECT 
            T.Id AS [Employee_Details.Id], 
            T.LoginId AS [Employee_Details.LoginId], 
            T.Firstname AS [Employee_Details.Firstname], 
            T.Lastname AS [Employee_Details.Lastname], 
            T.Email AS [Employee_Details.Email], 
            T.Address AS [Employee_Details.Address], 
            T.JobTitleId AS [Employee_Details.JobTitleId], 
            T.SignUpDate AS [Employee_Details.SignUpDate], 
            True AS _from0
        FROM JobSearchDBEntities.Employee_Details AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBModelStoreContainer.Employee_Login.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employee_Login
        [JobSearchDBModel.Store.Employee_Login](T1.[Employee_Login.Id], T1.[Employee_Login.Username], T1.[Employee_Login.Password], T1.[Employee_Login.RoleId], T1.[Employee_Login.TwoFKey])
    FROM (
        SELECT 
            T.Id AS [Employee_Login.Id], 
            T.Username AS [Employee_Login.Username], 
            T.Password AS [Employee_Login.Password], 
            T.RoleId AS [Employee_Login.RoleId], 
            T.TwoFKey AS [Employee_Login.TwoFKey], 
            True AS _from0
        FROM JobSearchDBEntities.Employee_Login AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBModelStoreContainer.Job_Reviews.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Job_Reviews
        [JobSearchDBModel.Store.Job_Reviews](T1.[Job_Reviews.Id], T1.[Job_Reviews.EmployeeId], T1.[Job_Reviews.CompanyId], T1.[Job_Reviews.JobId], T1.[Job_Reviews.Rating], T1.[Job_Reviews.Comments], T1.[Job_Reviews.Timestamp])
    FROM (
        SELECT 
            T.Id AS [Job_Reviews.Id], 
            T.EmployeeId AS [Job_Reviews.EmployeeId], 
            T.CompanyId AS [Job_Reviews.CompanyId], 
            T.JobId AS [Job_Reviews.JobId], 
            T.Rating AS [Job_Reviews.Rating], 
            T.Comments AS [Job_Reviews.Comments], 
            T.Timestamp AS [Job_Reviews.Timestamp], 
            True AS _from0
        FROM JobSearchDBEntities.Job_Reviews AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBModelStoreContainer.Job_Type.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Job_Type
        [JobSearchDBModel.Store.Job_Type](T1.[Job_Type.Id], T1.[Job_Type.Title])
    FROM (
        SELECT 
            T.Id AS [Job_Type.Id], 
            T.Title AS [Job_Type.Title], 
            True AS _from0
        FROM JobSearchDBEntities.Job_Type AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBModelStoreContainer.Jobs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Jobs
        [JobSearchDBModel.Store.Jobs](T1.Jobs_Id, T1.Jobs_JobName, T1.Jobs_JobTypeId, T1.Jobs_CompanyId, T1.Jobs_JobDescription, T1.Jobs_DatePosted)
    FROM (
        SELECT 
            T.Id AS Jobs_Id, 
            T.JobName AS Jobs_JobName, 
            T.JobTypeId AS Jobs_JobTypeId, 
            T.CompanyId AS Jobs_CompanyId, 
            T.JobDescription AS Jobs_JobDescription, 
            T.DatePosted AS Jobs_DatePosted, 
            True AS _from0
        FROM JobSearchDBEntities.Jobs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBModelStoreContainer.Jobs_Applied.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Jobs_Applied
        [JobSearchDBModel.Store.Jobs_Applied](T1.[Jobs_Applied.Id], T1.[Jobs_Applied.ApplicantId], T1.[Jobs_Applied.CompanyId], T1.[Jobs_Applied.JobId], T1.[Jobs_Applied.DateApplied])
    FROM (
        SELECT 
            T.Id AS [Jobs_Applied.Id], 
            T.ApplicantId AS [Jobs_Applied.ApplicantId], 
            T.CompanyId AS [Jobs_Applied.CompanyId], 
            T.JobId AS [Jobs_Applied.JobId], 
            T.DateApplied AS [Jobs_Applied.DateApplied], 
            True AS _from0
        FROM JobSearchDBEntities.Jobs_Applied AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBModelStoreContainer.Jobs_Hired.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Jobs_Hired
        [JobSearchDBModel.Store.Jobs_Hired](T1.[Jobs_Hired.Id], T1.[Jobs_Hired.EmployeeId], T1.[Jobs_Hired.CompanyId], T1.[Jobs_Hired.JobId], T1.[Jobs_Hired.DateHired])
    FROM (
        SELECT 
            T.Id AS [Jobs_Hired.Id], 
            T.EmployeeId AS [Jobs_Hired.EmployeeId], 
            T.CompanyId AS [Jobs_Hired.CompanyId], 
            T.JobId AS [Jobs_Hired.JobId], 
            T.DateHired AS [Jobs_Hired.DateHired], 
            True AS _from0
        FROM JobSearchDBEntities.Jobs_Hired AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBModelStoreContainer.Employee_Roles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employee_Roles
        [JobSearchDBModel.Store.Employee_Roles](T1.[Employee_Roles.Id], T1.[Employee_Roles.LoginId], T1.[Employee_Roles.Rolename])
    FROM (
        SELECT 
            T.Id AS [Employee_Roles.Id], 
            T.LoginId AS [Employee_Roles.LoginId], 
            T.Rolename AS [Employee_Roles.Rolename], 
            True AS _from0
        FROM JobSearchDBEntities.Employee_Roles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBModelStoreContainer.Employee_Searches.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employee_Searches
        [JobSearchDBModel.Store.Employee_Searches](T1.[Employee_Searches.JobId], T1.[Employee_Searches.UserId])
    FROM (
        SELECT 
            Key(T.Jobs).Id AS [Employee_Searches.JobId], 
            Key(T.Employee_Login).Id AS [Employee_Searches.UserId], 
            True AS _from0
        FROM JobSearchDBEntities.Employee_Searches AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBEntities.Companies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Companies
        [JobSearchDBModel.Companies](T1.Companies_Id, T1.Companies_Name, T1.Companies_Description)
    FROM (
        SELECT 
            T.Id AS Companies_Id, 
            T.Name AS Companies_Name, 
            T.Description AS Companies_Description, 
            True AS _from0
        FROM JobSearchDBModelStoreContainer.Companies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBEntities.Employee_Details.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employee_Details
        [JobSearchDBModel.Employee_Details](T1.[Employee_Details.Id], T1.[Employee_Details.LoginId], T1.[Employee_Details.Firstname], T1.[Employee_Details.Lastname], T1.[Employee_Details.Email], T1.[Employee_Details.Address], T1.[Employee_Details.JobTitleId], T1.[Employee_Details.SignUpDate])
    FROM (
        SELECT 
            T.Id AS [Employee_Details.Id], 
            T.LoginId AS [Employee_Details.LoginId], 
            T.Firstname AS [Employee_Details.Firstname], 
            T.Lastname AS [Employee_Details.Lastname], 
            T.Email AS [Employee_Details.Email], 
            T.Address AS [Employee_Details.Address], 
            T.JobTitleId AS [Employee_Details.JobTitleId], 
            T.SignUpDate AS [Employee_Details.SignUpDate], 
            True AS _from0
        FROM JobSearchDBModelStoreContainer.Employee_Details AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBEntities.Employee_Login.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employee_Login
        [JobSearchDBModel.Employee_Login](T1.[Employee_Login.Id], T1.[Employee_Login.Username], T1.[Employee_Login.Password], T1.[Employee_Login.RoleId], T1.[Employee_Login.TwoFKey])
    FROM (
        SELECT 
            T.Id AS [Employee_Login.Id], 
            T.Username AS [Employee_Login.Username], 
            T.Password AS [Employee_Login.Password], 
            T.RoleId AS [Employee_Login.RoleId], 
            T.TwoFKey AS [Employee_Login.TwoFKey], 
            True AS _from0
        FROM JobSearchDBModelStoreContainer.Employee_Login AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBEntities.Job_Reviews.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Job_Reviews
        [JobSearchDBModel.Job_Reviews](T1.[Job_Reviews.Id], T1.[Job_Reviews.EmployeeId], T1.[Job_Reviews.CompanyId], T1.[Job_Reviews.JobId], T1.[Job_Reviews.Rating], T1.[Job_Reviews.Comments], T1.[Job_Reviews.Timestamp])
    FROM (
        SELECT 
            T.Id AS [Job_Reviews.Id], 
            T.EmployeeId AS [Job_Reviews.EmployeeId], 
            T.CompanyId AS [Job_Reviews.CompanyId], 
            T.JobId AS [Job_Reviews.JobId], 
            T.Rating AS [Job_Reviews.Rating], 
            T.Comments AS [Job_Reviews.Comments], 
            T.Timestamp AS [Job_Reviews.Timestamp], 
            True AS _from0
        FROM JobSearchDBModelStoreContainer.Job_Reviews AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBEntities.Job_Type.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Job_Type
        [JobSearchDBModel.Job_Type](T1.[Job_Type.Id], T1.[Job_Type.Title])
    FROM (
        SELECT 
            T.Id AS [Job_Type.Id], 
            T.Title AS [Job_Type.Title], 
            True AS _from0
        FROM JobSearchDBModelStoreContainer.Job_Type AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBEntities.Jobs.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Jobs
        [JobSearchDBModel.Jobs](T1.Jobs_Id, T1.Jobs_JobName, T1.Jobs_JobTypeId, T1.Jobs_CompanyId, T1.Jobs_JobDescription, T1.Jobs_DatePosted)
    FROM (
        SELECT 
            T.Id AS Jobs_Id, 
            T.JobName AS Jobs_JobName, 
            T.JobTypeId AS Jobs_JobTypeId, 
            T.CompanyId AS Jobs_CompanyId, 
            T.JobDescription AS Jobs_JobDescription, 
            T.DatePosted AS Jobs_DatePosted, 
            True AS _from0
        FROM JobSearchDBModelStoreContainer.Jobs AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBEntities.Jobs_Applied.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Jobs_Applied
        [JobSearchDBModel.Jobs_Applied](T1.[Jobs_Applied.Id], T1.[Jobs_Applied.ApplicantId], T1.[Jobs_Applied.CompanyId], T1.[Jobs_Applied.JobId], T1.[Jobs_Applied.DateApplied])
    FROM (
        SELECT 
            T.Id AS [Jobs_Applied.Id], 
            T.ApplicantId AS [Jobs_Applied.ApplicantId], 
            T.CompanyId AS [Jobs_Applied.CompanyId], 
            T.JobId AS [Jobs_Applied.JobId], 
            T.DateApplied AS [Jobs_Applied.DateApplied], 
            True AS _from0
        FROM JobSearchDBModelStoreContainer.Jobs_Applied AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBEntities.Jobs_Hired.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Jobs_Hired
        [JobSearchDBModel.Jobs_Hired](T1.[Jobs_Hired.Id], T1.[Jobs_Hired.EmployeeId], T1.[Jobs_Hired.CompanyId], T1.[Jobs_Hired.JobId], T1.[Jobs_Hired.DateHired])
    FROM (
        SELECT 
            T.Id AS [Jobs_Hired.Id], 
            T.EmployeeId AS [Jobs_Hired.EmployeeId], 
            T.CompanyId AS [Jobs_Hired.CompanyId], 
            T.JobId AS [Jobs_Hired.JobId], 
            T.DateHired AS [Jobs_Hired.DateHired], 
            True AS _from0
        FROM JobSearchDBModelStoreContainer.Jobs_Hired AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBEntities.Employee_Roles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employee_Roles
        [JobSearchDBModel.Employee_Roles](T1.[Employee_Roles.Id], T1.[Employee_Roles.LoginId], T1.[Employee_Roles.Rolename])
    FROM (
        SELECT 
            T.Id AS [Employee_Roles.Id], 
            T.LoginId AS [Employee_Roles.LoginId], 
            T.Rolename AS [Employee_Roles.Rolename], 
            True AS _from0
        FROM JobSearchDBModelStoreContainer.Employee_Roles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for JobSearchDBEntities.Employee_Searches.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employee_Searches
        [JobSearchDBModel.Employee_Searches](T3.[Employee_Searches.Jobs], T3.[Employee_Searches.Employee_Login])
    FROM (
        SELECT -- Constructing Jobs
            CreateRef(JobSearchDBEntities.Jobs, row(T2.[Employee_Searches.Jobs.Id]), [JobSearchDBModel.Jobs]) AS [Employee_Searches.Jobs], 
            T2.[Employee_Searches.Employee_Login]
        FROM (
            SELECT -- Constructing Employee_Login
                T1.[Employee_Searches.Jobs.Id], 
                CreateRef(JobSearchDBEntities.Employee_Login, row(T1.[Employee_Searches.Employee_Login.Id]), [JobSearchDBModel.Employee_Login]) AS [Employee_Searches.Employee_Login]
            FROM (
                SELECT 
                    T.JobId AS [Employee_Searches.Jobs.Id], 
                    T.UserId AS [Employee_Searches.Employee_Login.Id], 
                    True AS _from0
                FROM JobSearchDBModelStoreContainer.Employee_Searches AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
    }
}
